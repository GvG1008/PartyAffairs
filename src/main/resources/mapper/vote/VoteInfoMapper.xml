<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zqu.pa.dao.vote.VoteInfoMapper">
  <resultMap id="BaseResultMap" type="com.zqu.pa.entity.vote.VoteInfo">
    <id column="vote_id" jdbcType="BIGINT" property="voteId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="start_time" jdbcType="BIGINT" property="startTime" />
    <result column="end_time" jdbcType="BIGINT" property="endTime" />
    <result column="least" jdbcType="INTEGER" property="least" />
    <result column="most" jdbcType="INTEGER" property="most" />
    <result column="create_id" jdbcType="VARCHAR" property="createId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="anonymity" jdbcType="INTEGER" property="anonymity" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    vote_id, type, title, description, start_time, end_time, least, most, create_id, 
    status, anonymity
  </sql>
  <select id="selectByExample" parameterType="com.zqu.pa.entity.vote.VoteInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from vote_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from vote_info
    where vote_id = #{voteId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from vote_info
    where vote_id = #{voteId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.zqu.pa.entity.vote.VoteInfoExample">
    delete from vote_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zqu.pa.entity.vote.VoteInfo">
    insert into vote_info (vote_id, type, title, 
      description, start_time, end_time, 
      least, most, create_id, 
      status, anonymity)
    values (#{voteId,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{startTime,jdbcType=BIGINT}, #{endTime,jdbcType=BIGINT}, 
      #{least,jdbcType=INTEGER}, #{most,jdbcType=INTEGER}, #{createId,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{anonymity,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zqu.pa.entity.vote.VoteInfo">
    insert into vote_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="voteId != null">
        vote_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="least != null">
        least,
      </if>
      <if test="most != null">
        most,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="anonymity != null">
        anonymity,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="voteId != null">
        #{voteId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=BIGINT},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=BIGINT},
      </if>
      <if test="least != null">
        #{least,jdbcType=INTEGER},
      </if>
      <if test="most != null">
        #{most,jdbcType=INTEGER},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="anonymity != null">
        #{anonymity,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zqu.pa.entity.vote.VoteInfoExample" resultType="java.lang.Long">
    select count(*) from vote_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update vote_info
    <set>
      <if test="record.voteId != null">
        vote_id = #{record.voteId,jdbcType=BIGINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=BIGINT},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=BIGINT},
      </if>
      <if test="record.least != null">
        least = #{record.least,jdbcType=INTEGER},
      </if>
      <if test="record.most != null">
        most = #{record.most,jdbcType=INTEGER},
      </if>
      <if test="record.createId != null">
        create_id = #{record.createId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.anonymity != null">
        anonymity = #{record.anonymity,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update vote_info
    set vote_id = #{record.voteId,jdbcType=BIGINT},
      type = #{record.type,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=BIGINT},
      end_time = #{record.endTime,jdbcType=BIGINT},
      least = #{record.least,jdbcType=INTEGER},
      most = #{record.most,jdbcType=INTEGER},
      create_id = #{record.createId,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      anonymity = #{record.anonymity,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zqu.pa.entity.vote.VoteInfo">
    update vote_info
    <set>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=BIGINT},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=BIGINT},
      </if>
      <if test="least != null">
        least = #{least,jdbcType=INTEGER},
      </if>
      <if test="most != null">
        most = #{most,jdbcType=INTEGER},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="anonymity != null">
        anonymity = #{anonymity,jdbcType=INTEGER},
      </if>
    </set>
    where vote_id = #{voteId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zqu.pa.entity.vote.VoteInfo">
    update vote_info
    set type = #{type,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=BIGINT},
      end_time = #{endTime,jdbcType=BIGINT},
      least = #{least,jdbcType=INTEGER},
      most = #{most,jdbcType=INTEGER},
      create_id = #{createId,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      anonymity = #{anonymity,jdbcType=INTEGER}
    where vote_id = #{voteId,jdbcType=BIGINT}
  </update>
</mapper>