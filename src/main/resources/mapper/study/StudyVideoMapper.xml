<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zqu.pa.dao.study.StudyVideoMapper" >
  <resultMap id="BaseResultMap" type="com.zqu.pa.entity.study.StudyVideo" >
    <constructor >
      <idArg column="video_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="video_title" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="video_introduction" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="cover_img" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="video_path" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="user_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="createtime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="updatetime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    video_id, video_title, video_introduction, cover_img, video_path, user_id, createtime, 
    updatetime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from study_video
    where video_id = #{videoId,jdbcType=INTEGER}
  </select>
  <select id="selectPutonByLabelId" resultType="com.zqu.pa.entity.study.StudyVideo" parameterType="map" >
    SELECT * FROM study_video
    WHERE video_id NOT IN(SELECT video_id FROM study_video_putoff) 
    AND video_id IN (SELECT video_id FROM study_video_label WHERE label_id IN
    <foreach collection="idList" index="index" item="item" open="(" separator="," close=")">
        #{item}
    </foreach> 
    ) ORDER BY video_id
    limit ${index},${num}
  </select>
  <select id="selectCountPutonByLabelId" resultType="int" parameterType="java.util.List" >
    SELECT count(1) FROM study_video
    WHERE video_id NOT IN(SELECT video_id FROM study_video_putoff) 
    AND video_id IN (SELECT video_id FROM study_video_label WHERE label_id IN
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
        #{item}
    </foreach> 
    )
  </select>
  <select id="selectMustPutonByUserId" resultType="com.zqu.pa.entity.study.StudyVideo" parameterType="string" >
    select *
    from study_video
    where video_id IN (select video_id from study_video_must where user_id = #{userId,jdbcType=VARCHAR})
    AND video_id NOT IN (select video_id from study_video_putoff)
    order by video_id
    limit #{index},#{num}
  </select>
  <select id="selectCountMustPutonByUserId" resultType="int" parameterType="string" >
    select count(1)
    from study_video
    where video_id IN (select video_id from study_video_must where user_id = #{userId,jdbcType=VARCHAR})
    AND video_id NOT IN (select video_id from study_video_putoff)
    order by video_id
  </select>
  <select id="selectPuton" resultType="com.zqu.pa.entity.study.StudyVideo">
    select * from study_video
    where video_id NOT IN(select video_id from study_video_putoff)
    order by video_id
    limit #{index},#{num}
  </select>
  <select id="selectCountPuton" resultType="int">
    select count(1) from study_video
    where video_id NOT IN(select video_id from study_video_putoff)
    order by video_id
  </select>
  <select id="selectScheduleByVideoIdAndUserId" resultType="java.lang.Float" parameterType="com.zqu.pa.entity.study.StudyVideoRecord">
    select COALESCE(sum(schedule),0) from study_video_record
    where video_id = #{videoId,jdbcType=INTEGER} and user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <select id="selectVideoIdByVideoPath" resultType="int" parameterType="string">
    select video_id from study_video
    where video_path = #{videoPath,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from study_video
    where video_id = #{videoId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zqu.pa.entity.study.StudyVideo" >
    insert into study_video (video_id, video_title, video_introduction, 
      cover_img, video_path, user_id, 
      createtime, updatetime)
    values (#{videoId,jdbcType=INTEGER}, #{videoTitle,jdbcType=VARCHAR}, #{videoIntroduction,jdbcType=VARCHAR}, 
      #{coverImg,jdbcType=VARCHAR}, #{videoPath,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      now(), now())
  </insert>
  <insert id="insertSelective" parameterType="com.zqu.pa.entity.study.StudyVideo" >
    insert into study_video
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="videoId != null" >
        video_id,
      </if>
      <if test="videoTitle != null" >
        video_title,
      </if>
      <if test="videoIntroduction != null" >
        video_introduction,
      </if>
      <if test="coverImg != null" >
        cover_img,
      </if>
      <if test="videoPath != null" >
        video_path,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="videoId != null" >
        #{videoId,jdbcType=INTEGER},
      </if>
      <if test="videoTitle != null" >
        #{videoTitle,jdbcType=VARCHAR},
      </if>
      <if test="videoIntroduction != null" >
        #{videoIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="coverImg != null" >
        #{coverImg,jdbcType=VARCHAR},
      </if>
      <if test="videoPath != null" >
        #{videoPath,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zqu.pa.entity.study.StudyVideo" >
    update study_video
    <set >
      <if test="videoTitle != null" >
        video_title = #{videoTitle,jdbcType=VARCHAR},
      </if>
      <if test="videoIntroduction != null" >
        video_introduction = #{videoIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="coverImg != null" >
        cover_img = #{coverImg,jdbcType=VARCHAR},
      </if>
      <if test="videoPath != null" >
        video_path = #{videoPath,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      updatetime = now()
    </set>
    where video_id = #{videoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zqu.pa.entity.study.StudyVideo" >
    update study_video
    set video_title = #{videoTitle,jdbcType=VARCHAR},
      video_introduction = #{videoIntroduction,jdbcType=VARCHAR},
      cover_img = #{coverImg,jdbcType=VARCHAR},
      video_path = #{videoPath,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      updatetime = now()
    where video_id = #{videoId,jdbcType=INTEGER}
  </update>
</mapper>